{"version":3,"sources":["components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/EdifProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/auth.js","components/SignForm.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","link","linkText","location","pathname","console","log","className","href","loggedIn","email","onClick","handleLogout","to","Footer","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","alt","name","type","aria-label","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","key","PopupWithForm","isOpened","onClose","onSubmit","action","method","noValidate","title","children","closeText","ImagePopup","api","baseUrl","headers","this","_baseUrl","_headers","url","additionalHeaders","body","fetchOptions","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","statusText","_fetchApi","cardId","likeStatus","info","authorization","EditProfilePopup","isOpen","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","value","onChange","evt","target","placeholder","minLength","maxLength","required","pattern","EditAvatarPopup","onUpdateAvatar","avatarInput","useRef","current","ref","AddPlacePopup","setLink","BASE_URL","SignForm","submitText","hint","Login","history","useHistory","setEmail","password","setPassword","response","data","token","localStorage","setItem","auth","handleLogin","push","handleLoginFailed","catch","err","Register","registerHandler","ProtectedRoute","component","InfoTooltip","image","isSuccess","imageAlt","popupText","closeHandler","process","App","isEditProfileOpen","setIsEditProfileOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","infoTooltipSuccess","setInfoTooltipSuccess","userEmail","setUserEmail","closeAllPopups","handleInfoTooltipOpen","getItem","getInitialsCards","error","getUserInfo","mainPage","changeLikeCardStatus","newCard","newCards","c","removeCard","filter","userInfo","editUserInfo","updatedUser","postCard","editAvatar","Provider","removeItem","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.688f57d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n  let link = '',\r\n    linkText = '';\r\n  if (props.location.pathname === '/sign-in') {\r\n    link = '/sign-up';\r\n    linkText = 'Регистрация';\r\n  } else if (props.location.pathname === '/sign-up') {\r\n    link = '/sign-in';\r\n    linkText = 'Войти';\r\n  }\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <a className=\"header__logo\" href=\"/\">\r\n        &nbsp;\r\n      </a>\r\n      <div className=\"header__menu\">\r\n        {props.loggedIn ? (\r\n          <>\r\n            <div className=\"header__user-email\">{props.email}</div>\r\n            <button className=\"header__exit-button\" onClick={props.handleLogout}>\r\n              Выйти\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <Link className=\"header__link\" to={link}>\r\n            {linkText}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React, { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `element__remove ${isOwn ? 'element__remove_visible' : ''}`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_liked' : ''}`;\r\n\r\n  return (\r\n    <figure className=\"element\">\r\n      <div className=\"element__image-container\">\r\n        <img\r\n          className=\"element__image\"\r\n          src={card.link}\r\n          alt={card.name}\r\n          onClick={() => {\r\n            onCardClick(card);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"element__info-container\">\r\n        <h2 className=\"element__name\">{card.name}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            type=\"button\"\r\n            aria-label=\"Нравится\"\r\n            onClick={() => {\r\n              onCardLike(card);\r\n            }}\r\n          />\r\n          <p className=\"element__like-counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        onClick={() => {\r\n          onCardDelete(card);\r\n        }}\r\n        aria-label=\"Удалить\"\r\n      />\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  const currentUser = useContext(CurrentUserContext);  \r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar-container\">\r\n          <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар пользователя\" />\r\n          <div className=\"profile__avatar-layout\">\r\n            <button className=\"profile__avatar-edit\" onClick={props.onEditAvatar}></button>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile__info-container\">\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name-container\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n              <button\r\n                className=\"profile__edit-button\"\r\n                type=\"button\"\r\n                aria-label=\"Редактировать профиль\"\r\n                onClick={props.onEditProfile}\r\n              ></button>\r\n            </div>\r\n            <p className=\"profile__position\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n          aria-label=\"Добавить\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        {props.cards.map((card) => (\r\n          <Card\r\n            card={card}\r\n            key={card._id}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup popup_${props.name} ${props.isOpened ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close-button\"\r\n          aria-label=\"Закрыть\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <form\r\n          className=\"popup__form-container\"\r\n          name={props.name}\r\n          onSubmit={props.onSubmit}\r\n          action=\"#\"\r\n          method=\"GET\"\r\n          noValidate\r\n        >\r\n          <h2 className=\"popup__title\">{props.title}</h2>\r\n          {props.children}\r\n          <button type=\"submit\" className=\"popup__submit-button\">\r\n            {props.closeText}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={`popup popup_image-preview ${props.card ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button type=\"button\" className=\"popup__close-button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n        <div className=\"popup__content-container\">\r\n          <figure className=\"popup__image-preview\">\r\n            <img className=\"popup__image\" src={props.card && props.card.link} alt={props.card && props.card.name} />\r\n            <figcaption className=\"popup__image-name\">{props.card && props.card.name}</figcaption>\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","class Api {\r\n  constructor(baseUrl, headers) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _fetchApi(url, method, additionalHeaders, body) {\r\n    const fetchOptions = {\r\n      method: method,\r\n      headers: { ...this._headers, ...additionalHeaders },\r\n    };\r\n    if (body) {\r\n      fetchOptions.body = JSON.stringify(body);\r\n    }\r\n\r\n    return fetch(`${this._baseUrl}${url}`, fetchOptions).then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\r\n      });\r\n  }\r\n\r\n  //Операции с карточками\r\n  getInitialsCards() {\r\n    return this._fetchApi(\"/cards\", \"GET\");\r\n  }\r\n\r\n  postCard(card) {\r\n    return this._fetchApi(\"/cards\", \"POST\", {\"Content-Type\": \"application/json\"}, card);\r\n  }\r\n\r\n  removeCard(cardId) {\r\n    return this._fetchApi(`/cards/${cardId}`, \"DELETE\");\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, likeStatus) {\r\n    if (likeStatus) {\r\n      return this._fetchApi(`/cards/likes/${cardId}`, \"PUT\");\r\n    } else {\r\n      return this._fetchApi(`/cards/likes/${cardId}`, \"DELETE\");  \r\n    }\r\n  }\r\n  \r\n  //Операции с данными пользователя\r\n  getUserInfo() {\r\n    return this._fetchApi(\"/users/me\", \"GET\");\r\n  }\r\n\r\n  editUserInfo(info) {\r\n    return this._fetchApi(\"/users/me\", \"PATCH\", {\"Content-Type\": \"application/json\"}, info);\r\n  }\r\n\r\n  editAvatar(link) {\r\n    return this._fetchApi(\"/users/me/avatar\", \"PATCH\", {\"Content-Type\": \"application/json\"}, {avatar: link});\r\n  }\r\n}\r\n\r\nconst api = new Api(\"https://mesto.nomoreparties.co/v1/cohort-13\", {\r\n  authorization: \"d0402095-4250-4903-b400-52c8ec468fa5\",\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const currentUser = useContext(CurrentUserContext);  \r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser])\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit-form\"\r\n      title=\"Редактировать профиль\"\r\n      closeText=\"Сохранить\"\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__fieldset\">\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            id=\"input-edit-name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(evt) => {\r\n              setName(evt.target.value);\r\n            }}\r\n            placeholder=\"Имя\"\r\n            minLength=\"2\"\r\n            maxLength=\"40\"\r\n            required\r\n            pattern=\"[A-Za-zА-Яа-я\\s\\-]{1,}\"\r\n          />\r\n          <span\r\n            className=\"popup__input-error popup__input-error_active\"\r\n            id=\"input-edit-name-error\"\r\n          ></span>\r\n        </label>\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            id=\"input-edit-position\"\r\n            name=\"about\"\r\n            value={description}\r\n            onChange={(evt) => {\r\n              setDescription(evt.target.value);\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Род занятий\"\r\n            minLength=\"2\"\r\n            maxLength=\"200\"\r\n            required\r\n          />\r\n          <span\r\n            className=\"popup__input-error popup__input-error_active\"\r\n            id=\"input-edit-position-error\"\r\n          ></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React, { useRef, useContext, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const avatarInput = useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onUpdateAvatar({\r\n      avatar: avatarInput.current.value,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    avatarInput.current.value = currentUser.avatar;\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"update-avatar\"\r\n      title=\"Обновить аватар\"\r\n      closeText=\"Сохранить\"\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__fieldset\">\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            name=\"link\"\r\n            type=\"url\"\r\n            ref={avatarInput}\r\n            placeholder=\"Ссылка на аватар\"\r\n            required\r\n          />\r\n          <span className=\"popup__input-error\"></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"add-form\"\r\n      title=\"Новое место\"\r\n      closeText=\"Создать\"\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__fieldset\">\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n            placeholder=\"Название\"\r\n            minLength=\"1\"\r\n            maxLength=\"30\"\r\n            required\r\n          />\r\n          <span className=\"popup__input-error\"></span>\r\n        </label>\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            name=\"link\"\r\n            type=\"url\"\r\n            value={link}\r\n            onChange={(e) => {\r\n              setLink(e.target.value);\r\n            }}\r\n            placeholder=\"Ссылка на картинку\"\r\n            required\r\n          />\r\n          <span className=\"popup__input-error\"></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n  .then((response) => {\r\n    return response.json();\r\n  })\r\n  .then((res) => {\r\n    return res;\r\n  })\r\n};\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n  .then((response => response.json()))\r\n  .then((data) => {\r\n    if (data.token){\r\n      localStorage.setItem('token', data.token);      \r\n    }\r\n    return data;\r\n  })\r\n};\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n  .then(data => data)\r\n}","import React from 'react';\r\n\r\nfunction SignForm(props) {\r\n  return (\r\n    <form\r\n      className=\"sign-form\"\r\n      name={props.name}\r\n      onSubmit={props.onSubmit}\r\n      action=\"#\"\r\n      method=\"GET\"\r\n      noValidate\r\n    >\r\n      <div className=\"sign-form__container\">\r\n        <h2 className=\"sign-form__title\">{props.title}</h2>\r\n        {props.children}\r\n      </div>\r\n      <div className=\"sign-form__bottom-container\">\r\n        <button type=\"submit\" className=\"sign-form__submit-button\">\r\n          {props.submitText}\r\n        </button>\r\n        {props.hint}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignForm;\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as auth from '../utils/auth';\r\nimport SignForm from './SignForm';\r\n\r\nfunction Login(props) {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      props.handleLoginFailed();\r\n      return;\r\n    }\r\n\r\n    auth\r\n      .authorize(password, email)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          props.handleLogin();\r\n          history.push('/');\r\n        } else {\r\n          props.handleLoginFailed();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err); \r\n        props.handleLoginFailed();\r\n      });\r\n  }\r\n\r\n  const hint = (\r\n    <div className=\"sign-form__transition-hint\">\r\n      Ещё не зарегистрированы?{' '}\r\n      <Link className=\"sign-form__link\" to=\"/sign-up\">\r\n        Регистрация\r\n      </Link>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <SignForm name=\"sign-in\" onSubmit={submitHandler} title=\"Вход\" submitText=\"Войти\" hint={hint}>\r\n      <label className=\"sign-form__field\">\r\n        <input\r\n          className=\"sign-form__input\"\r\n          id=\"input-sign-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(evt) => {\r\n            setEmail(evt.target.value);\r\n          }}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <span\r\n          className=\"sign-form__input-error sign-form__input-error_active\"\r\n          id=\"input-edit-name-error\"\r\n        ></span>\r\n      </label>\r\n      <label className=\"sign-form__field\">\r\n        <input\r\n          className=\"sign-form__input\"\r\n          id=\"input-sign-password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(evt) => {\r\n            setPassword(evt.target.value);\r\n          }}\r\n          placeholder=\"Пароль\"\r\n          required\r\n        />\r\n      </label>\r\n    </SignForm>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignForm from './SignForm';\r\nimport * as auth from '../utils/auth';\r\n\r\nfunction Register({registerHandler}) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    auth.register(password, email).then((res) => {\r\n      if (res.data) {\r\n        registerHandler(true);\r\n      } else {\r\n        registerHandler(false);\r\n      }\r\n    }).catch(()=>{\r\n      registerHandler(false);\r\n    });\r\n  }\r\n\r\n  const hint = (\r\n    <div className=\"sign-form__transition-hint\">\r\n      Уже зарегистрированы?{' '}\r\n      <Link className=\"sign-form__link\" to=\"/sign-in\">\r\n        Войти\r\n      </Link>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <SignForm\r\n      name=\"sign-in\"\r\n      onSubmit={submitHandler}\r\n      title=\"Регистрация\"\r\n      submitText=\"Зарегистрироваться\"\r\n      hint={hint}\r\n    >\r\n      <label className=\"sign-form__field\">\r\n        <input\r\n          className=\"sign-form__input\"\r\n          id=\"input-sign-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(evt) => {\r\n            setEmail(evt.target.value);\r\n          }}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <span\r\n          className=\"sign-form__input-error sign-form__input-error_active\"\r\n          id=\"input-edit-name-error\"\r\n        ></span>\r\n      </label>\r\n      <label className=\"sign-form__field\">\r\n        <input\r\n          className=\"sign-form__input\"\r\n          id=\"input-sign-password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(evt) => {\r\n            setPassword(evt.target.value);\r\n          }}\r\n          placeholder=\"Пароль\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"32\"\r\n        />\r\n      </label>\r\n    </SignForm>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <Route>{() => (props.loggedIn ? props.component : <Redirect to=\"/sign-in\" />)}</Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction InfoTooltip(props) {\r\n  const history = useHistory();\r\n  const image = props.isSuccess ? 'check.svg' : 'cross.svg';\r\n  const imageAlt = props.isSuccess ? 'Регистрация прошла успешно' : 'Что-то пошло не так';\r\n  const popupText = props.isSuccess\r\n    ? 'Вы успешно зарегистрировались!'\r\n    : 'Что-то пошло не так! Попробуйте ещё раз.';\r\n\r\n  function closeHandler() {\r\n    props.onClose();\r\n\r\n    if (props.isSuccess) {\r\n      history.push('/sign-in');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`popup popup_after-sign ${props.isOpen ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close-button\"\r\n          aria-label=\"Закрыть\"\r\n          onClick={closeHandler}\r\n        ></button>\r\n        <form\r\n          className=\"popup__form-container\"\r\n          name=\"after-sign\"\r\n          onSubmit={closeHandler}\r\n          action=\"#\"\r\n          method=\"GET\"\r\n          noValidate\r\n        >\r\n          <img\r\n            className=\"popup__sign-image\"\r\n            src={`${process.env.PUBLIC_URL}/${image}`}\r\n            alt={imageAlt}\r\n          />\r\n          <h2 className=\"popup__text\">{popupText}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Main from './Main';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/Api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EdifProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport * as auth from '../utils/auth';\r\n\r\nfunction App(props) {\r\n  const [isEditProfileOpen, setIsEditProfileOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState();\r\n  const [currentUser, setCurrentUser] = useState({ _id: '', name: '', avatar: '', about: '' });\r\n  const [cards, setCards] = useState([]);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\r\n  const [infoTooltipSuccess, setInfoTooltipSuccess] = useState(false);\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      const token = localStorage.getItem('token');\r\n      // проверяем токен пользователя\r\n      auth\r\n        .checkToken(token)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            setLoggedIn(true);\r\n            setUserEmail(res.data.email);\r\n            history.push('/');\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      api\r\n        .getInitialsCards()\r\n        .then((res) => {\r\n          setCards(res);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      api\r\n        .getUserInfo()\r\n        .then((res) => {\r\n          setCurrentUser(res);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfileOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfileOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  function handleUpdateUser(userInfo) {\r\n    api\r\n      .editUserInfo(userInfo)\r\n      .then(() => {\r\n        const updatedUser = { ...currentUser };\r\n        updatedUser.name = userInfo.name;\r\n        updatedUser.about = userInfo.about;\r\n\r\n        setCurrentUser({ ...updatedUser });\r\n        setIsEditProfileOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        console.err(err);\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar({ avatar }) {\r\n    api\r\n      .editAvatar(avatar)\r\n      .then((updatedUser) => {\r\n        setCurrentUser(updatedUser);\r\n        setIsEditAvatarPopupOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleAddPlaceSubmit(card) {\r\n    api\r\n      .postCard(card)\r\n      .then((newCard) => {\r\n        setCards([...cards, newCard]);\r\n        setIsAddPlacePopupOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n        // Обновляем стейт\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api\r\n      .removeCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((c) => c._id !== card._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleInfoTooltipClose() {\r\n    setIsInfoTooltipOpen(false);\r\n  }\r\n\r\n  function handleInfoTooltipOpen(isSuccess) {\r\n    setIsInfoTooltipOpen(true);\r\n    setInfoTooltipSuccess(isSuccess);\r\n  }\r\n\r\n  function handleLogin() {\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  function handleLogout() {\r\n    setLoggedIn(false);\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  console.log(loggedIn);\r\n\r\n  const mainPage = (\r\n    <>\r\n      <Main\r\n        cards={cards}\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onCardClick={handleCardClick}\r\n        onCardLike={handleCardLike}\r\n        onCardDelete={handleCardDelete}\r\n      />\r\n      <EditProfilePopup\r\n        isOpen={isEditProfileOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateUser}\r\n      />\r\n      <AddPlacePopup\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onAddPlace={handleAddPlaceSubmit}\r\n      />\r\n      <EditAvatarPopup\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateAvatar={handleUpdateAvatar}\r\n      />\r\n      <PopupWithForm\r\n        name=\"confirm-form\"\r\n        title=\"Вы уверены\"\r\n        closeText=\"Да\"\r\n        onClose={closeAllPopups}\r\n      ></PopupWithForm>\r\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n      <Footer />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <div className=\"container\">\r\n          <Header loggedIn={loggedIn} email={userEmail} handleLogout={handleLogout} />\r\n          <Switch>\r\n            <Route path=\"/sign-up\">\r\n              <Register registerHandler={handleInfoTooltipOpen} />\r\n            </Route>\r\n            <Route path=\"/sign-in\">\r\n              <Login\r\n                handleLogin={handleLogin}\r\n                handleLoginFailed={() => {\r\n                  handleInfoTooltipOpen(false);\r\n                }}\r\n              />\r\n            </Route>\r\n            <ProtectedRoute path=\"/\" loggedIn={loggedIn} component={mainPage} />\r\n            <Route path=\"*\">{loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}</Route>\r\n          </Switch>\r\n          <InfoTooltip\r\n            isOpen={isInfoTooltipOpen}\r\n            onClose={handleInfoTooltipClose}\r\n            isSuccess={infoTooltipSuccess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}